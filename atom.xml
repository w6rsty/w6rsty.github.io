<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>w6rsty</title>
  
  <subtitle>My passion for CS</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-01-24T12:12:51.647Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>w6rsty</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Land 引擎设计</title>
    <link href="http://example.com/2023/01/24/Land-%E5%BC%95%E6%93%8E%E8%AE%BE%E8%AE%A1/"/>
    <id>http://example.com/2023/01/24/Land-%E5%BC%95%E6%93%8E%E8%AE%BE%E8%AE%A1/</id>
    <published>2023-01-24T12:04:21.000Z</published>
    <updated>2023-01-24T12:12:51.647Z</updated>
    
    <content type="html"><![CDATA[<p>Land Engine参照于The Cherno的Hazel Engine</p><h2 id="EntryPoint"><a href="#EntryPoint" class="headerlink" title="- EntryPoint"></a>- EntryPoint</h2><h2 id="Application-layer"><a href="#Application-layer" class="headerlink" title="- Application layer"></a>- Application layer</h2><h2 id="Window-layer"><a href="#Window-layer" class="headerlink" title="- Window layer"></a>- Window layer</h2><h3 id="Input"><a href="#Input" class="headerlink" title="- Input"></a>- Input</h3><h3 id="Event"><a href="#Event" class="headerlink" title="- Event"></a>- Event</h3><h2 id="Renderer"><a href="#Renderer" class="headerlink" title="- Renderer"></a>- Renderer</h2><h2 id="Render-API-abstraction"><a href="#Render-API-abstraction" class="headerlink" title="- Render API abstraction"></a>- Render API abstraction</h2><h2 id="Debugging-support"><a href="#Debugging-support" class="headerlink" title="- Debugging support"></a>- Debugging support</h2><h2 id="Scripting-language"><a href="#Scripting-language" class="headerlink" title="- Scripting language"></a>- Scripting language</h2><h2 id="Memory-system"><a href="#Memory-system" class="headerlink" title="- Memory system"></a>- Memory system</h2><h2 id="Entity-component-system-ECS"><a href="#Entity-component-system-ECS" class="headerlink" title="- Entity component system(ECS)"></a>- Entity component system(ECS)</h2><h2 id="Physics"><a href="#Physics" class="headerlink" title="- Physics"></a>- Physics</h2><h2 id="File-I-O-VFS"><a href="#File-I-O-VFS" class="headerlink" title="- File I/O, VFS"></a>- File I/O, VFS</h2><h2 id="Buid-system"><a href="#Buid-system" class="headerlink" title="- Buid system"></a>- Buid system</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Land Engine参照于The Cherno的Hazel Engine&lt;/p&gt;
&lt;h2 id=&quot;EntryPoint&quot;&gt;&lt;a href=&quot;#EntryPoint&quot; class=&quot;headerlink&quot; title=&quot;- EntryPoint&quot;&gt;&lt;/a&gt;- EntryPo</summary>
      
    
    
    
    <category term="Land Engine" scheme="http://example.com/categories/Land-Engine/"/>
    
    
    <category term="C++,OpenGL,ImGui" scheme="http://example.com/tags/C-OpenGL-ImGui/"/>
    
  </entry>
  
  <entry>
    <title>移动对象</title>
    <link href="http://example.com/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/"/>
    <id>http://example.com/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/</id>
    <published>2022-10-08T12:47:32.000Z</published>
    <updated>2023-03-27T13:30:50.098Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><h2 id><a href="#" class="headerlink" title></a><img src="/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/1.png" alt="1"></h2><p>使用WASD在矩阵中移动，按C可以清除痕迹</p><p><img src="/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/2.png" alt="2"></p><p>矩阵大小和刷新速度可以定义</p><h2 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h2><span id="more"></span><h3 id="1-刷新效果"><a href="#1-刷新效果" class="headerlink" title="1.刷新效果"></a>1.刷新效果</h3><p>在while循环中，先获取点的位置，传入矩阵进行渲染，使用<code>cls</code>清屏(为优化刷新效果在<code>cls</code>前后要使用<code>Sleep</code>)</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>全局目前是死循环，未加入退出功能</p><h3 id="2-矩阵设计"><a href="#2-矩阵设计" class="headerlink" title="2.矩阵设计"></a>2.矩阵设计</h3><p>使用<code>char matrix[][]</code>char类型二维数组，方便定义呈现效果</p><h3 id="3-移动实现"><a href="#3-移动实现" class="headerlink" title="3.移动实现"></a>3.移动实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(_kbhit())&#123;</span><br><span class="line">    <span class="type">int</span> ch = _getch();<span class="comment">//即获取键值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对坐标实现加减</p><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>此处坐标系的原点在左上角，向右下展开，设计要注意横纵坐标的循环设计</p><p>移动到边界时会出现bug，计划设计坐标判断条件使边界不可跨越</p><h3 id="4-分文件设计"><a href="#4-分文件设计" class="headerlink" title="4.分文件设计"></a>4.分文件设计</h3><p><img src="/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/3.png" alt="3"></p><h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><p>定义在同一文件时，因类的顺序，在一个类中调用另一个类会失败</p><p>分开定义时，引用头文件时会出现错误C3646和C4430</p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><p>1.在测试中实现绕边界转圈的效果</p><p>依次获取坐标后存入类成员的结构数组中，再按顺序渲染矩阵输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取border的坐标</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Behavior::getBorderXY</span><span class="params">(Screen&amp; screen)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (j &lt; w - <span class="number">1</span>) &#123;</span><br><span class="line">screen.borderlist.borderArray[count].x = j;</span><br><span class="line">screen.borderlist.borderArray[count].y = i;</span><br><span class="line">j++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i &lt; h - <span class="number">1</span>) &#123;</span><br><span class="line">screen.borderlist.borderArray[count].x = j;</span><br><span class="line">screen.borderlist.borderArray[count].y = i;</span><br><span class="line">i++;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (j &gt; <span class="number">0</span>) &#123;</span><br><span class="line">screen.borderlist.borderArray[count].x = j;</span><br><span class="line">screen.borderlist.borderArray[count].y = i;</span><br><span class="line">j--;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">screen.borderlist.borderArray[count].x = j;</span><br><span class="line">screen.borderlist.borderArray[count].y = i;</span><br><span class="line">i--;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.主循环</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line"><span class="built_in">clean</span>();</span><br><span class="line">screen.spix.<span class="built_in">moveSPix</span>(screen, behavior.<span class="built_in">getKeyValue</span>());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h2&gt;&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;img src=&quot;/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/1.png&quot; alt=&quot;1&quot;&gt;&lt;/h2&gt;&lt;p&gt;使用WASD在矩阵中移动，按C可以清除痕迹&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/10/08/%E4%B8%80%E4%B8%AA%E5%B8%A6%E7%A7%BB%E5%8A%A8%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%8F%E5%B9%95/2.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;矩阵大小和刷新速度可以定义&lt;/p&gt;
&lt;h2 id=&quot;技术实现&quot;&gt;&lt;a href=&quot;#技术实现&quot; class=&quot;headerlink&quot; title=&quot;技术实现&quot;&gt;&lt;/a&gt;技术实现&lt;/h2&gt;</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>通讯录管理项目</title>
    <link href="http://example.com/2022/09/30/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2022/09/30/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-09-30T14:36:20.000Z</published>
    <updated>2023-03-27T13:30:24.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通讯录管理项目"><a href="#通讯录管理项目" class="headerlink" title="通讯录管理项目"></a>通讯录管理项目</h2><p>控制台中的清屏操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="结构体的设计"><a href="#结构体的设计" class="headerlink" title="结构体的设计"></a>结构体的设计</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000<span class="comment">//指定联系人的数量，便于修改</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">indiv</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> gender;<span class="comment">//1男2女，在输出时进行处理</span></span><br><span class="line">    string phone;</span><br><span class="line">    string address;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">addressBooks</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">indiv</span> indivArray[MAX];</span><br><span class="line">    <span class="type">int</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="修改数据时的函数设计"><a href="#修改数据时的函数设计" class="headerlink" title="修改数据时的函数设计"></a>修改数据时的函数设计</h3><p>为了修改数据需要使用地址传递</p><p>地址访问时用<code>book-&gt;size</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">struct</span> addressBooks * book)</span> </span>&#123;</span><br><span class="line">book-&gt;indivArray[book-&gt;size].name = ;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">modify</span>(&amp;book);</span><br></pre></td></tr></table></figure><h3 id="删除联系人的实现原理"><a href="#删除联系人的实现原理" class="headerlink" title="删除联系人的实现原理"></a>删除联系人的实现原理</h3><h4 id="删除单个联系人"><a href="#删除单个联系人" class="headerlink" title="删除单个联系人"></a>删除单个联系人</h4><p>将该元素后的所有元素依次前移，覆盖该元素以实现删除的效果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteIndiv</span><span class="params">(<span class="keyword">struct</span> addressBooks * book,<span class="type">int</span> id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i =<span class="number">0</span>; i &lt; id; i++) &#123;</span><br><span class="line">         book-&gt;indivArray[id] = book-&gt;indivArray[id + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除所有"><a href="#删除所有" class="headerlink" title="删除所有"></a>删除所有</h4><p>其他功能在实现前先检查size是否为0，令<code>book-&gt;size=0</code>，逻辑上使数据无法再被访问</p><h3 id="检查联系人是否存在"><a href="#检查联系人是否存在" class="headerlink" title="检查联系人是否存在"></a>检查联系人是否存在</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(<span class="keyword">struct</span> addressBooks * book, string name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; book-&gt;size; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (book-&gt;indivArray[i].name == name) &#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若存在返回id，不存在返回-1，进行操作时设计一个flag判断返回是否为-1</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;通讯录管理项目&quot;&gt;&lt;a href=&quot;#通讯录管理项目&quot; class=&quot;headerlink&quot; title=&quot;通讯录管理项目&quot;&gt;&lt;/a&gt;通讯录管理项目&lt;/h2&gt;&lt;p&gt;控制台中的清屏操作&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;system&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;pause&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;system&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;cls&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;结构体的设计&quot;&gt;&lt;a href=&quot;#结构体的设计&quot; class=&quot;headerlink&quot; title=&quot;结构体的设计&quot;&gt;&lt;/a&gt;结构体的设计&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;define&lt;/span&gt; MAX 1000&lt;span class=&quot;comment&quot;&gt;//指定联系人的数量，便于修改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;indiv&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; gender;&lt;span class=&quot;comment&quot;&gt;//1男2女，在输出时进行处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string phone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string address;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;addressBooks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;indiv&lt;/span&gt; indivArray[MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
</feed>
